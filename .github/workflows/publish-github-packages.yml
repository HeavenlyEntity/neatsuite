name: Publish to GitHub Packages

on:
  # Manual trigger
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (leave empty to use current package.json version)'
        required: false
        type: string
      publish_netsuite:
        description: 'Publish @neatsuite/http package'
        required: true
        type: boolean
        default: true
      publish_netsuite_umd:
        description: 'Publish @neatsuite/http-umd package'
        required: true
        type: boolean
        default: true
  
  # Trigger on release creation
  release:
    types: [published]
  
  # Optional: trigger on main branch pushes (uncomment if desired)
  # push:
  #   branches:
  #     - main
  #   paths:
  #     - 'packages/**'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  publish:
    name: Publish Packages to GitHub Packages
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@neatsuite'
          cache: 'npm'
          
      - name: Install Dependencies
        run: npm ci
        
      - name: Build All Packages
        run: npm run build:all-packages
        
      - name: Configure npm for GitHub Packages
        run: |
          echo "@neatsuite:registry=https://npm.pkg.github.com" >> .npmrc
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}" >> .npmrc
          
      - name: Update Package Registry URLs
        run: |
          # Update package.json files to point to GitHub Packages
          sed -i 's/"name": "@neatsuite\/http"/"name": "@neatsuite\/http"/g' packages/netsuite/package.json
          sed -i 's/"name": "@neatsuite\/http-umd"/"name": "@neatsuite\/http-umd"/g' packages/netsuite-umd/package.json
          
          # Add publishConfig for GitHub Packages if not present
          node -e "
            const fs = require('fs');
            const path = require('path');
            
            ['packages/netsuite/package.json', 'packages/netsuite-umd/package.json'].forEach(pkgPath => {
              const pkg = JSON.parse(fs.readFileSync(pkgPath, 'utf8'));
              pkg.publishConfig = {
                ...pkg.publishConfig,
                registry: 'https://npm.pkg.github.com',
                access: 'public'
              };
              fs.writeFileSync(pkgPath, JSON.stringify(pkg, null, 2) + '\n');
            });
          "
          
      - name: Test Package Creation
        run: |
          npm pack --workspace=@neatsuite/http --dry-run
          npm pack --workspace=@neatsuite/http-umd --dry-run
          
      - name: Publish @neatsuite/http
        if: ${{ github.event_name == 'release' || inputs.publish_netsuite == true || github.event_name == 'push' }}
        run: npm publish --workspace=@neatsuite/http
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Publish @neatsuite/http-umd  
        if: ${{ github.event_name == 'release' || inputs.publish_netsuite_umd == true || github.event_name == 'push' }}
        run: npm publish --workspace=@neatsuite/http-umd
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Create Package Summary
        if: success()
        run: |
          echo "## ðŸ“¦ Published Packages" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [[ "${{ github.event_name }}" == "release" || "${{ inputs.publish_netsuite }}" == "true" || "${{ github.event_name }}" == "push" ]]; then
            NETSUITE_VERSION=$(node -p "require('./packages/netsuite/package.json').version")
            echo "âœ… **@neatsuite/http@${NETSUITE_VERSION}** - [View Package](https://github.com/${{ github.repository }}/packages)" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [[ "${{ github.event_name }}" == "release" || "${{ inputs.publish_netsuite_umd }}" == "true" || "${{ github.event_name }}" == "push" ]]; then
            UMD_VERSION=$(node -p "require('./packages/netsuite-umd/package.json').version")
            echo "âœ… **@neatsuite/http-umd@${UMD_VERSION}** - [View Package](https://github.com/${{ github.repository }}/packages)" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### ðŸ”— Installation" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
          echo "# Configure npm to use GitHub Packages" >> $GITHUB_STEP_SUMMARY
          echo "echo \"@neatsuite:registry=https://npm.pkg.github.com\" >> .npmrc" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "# Install packages" >> $GITHUB_STEP_SUMMARY
          echo "npm install @neatsuite/http" >> $GITHUB_STEP_SUMMARY
          echo "npm install @neatsuite/http-umd" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          
      - name: Comment on PR (if applicable)
        if: success() && github.event_name == 'workflow_dispatch'
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo } = context.repo;
            const packages = [];
            
            if (${{ inputs.publish_netsuite == true }}) {
              packages.push('@neatsuite/http');
            }
            if (${{ inputs.publish_netsuite_umd == true }}) {
              packages.push('@neatsuite/http-umd');
            }
            
            const message = `ðŸš€ Successfully published packages to GitHub Packages:
            
            ${packages.map(pkg => `â€¢ ${pkg}`).join('\n')}
            
            **Installation:**
            \`\`\`bash
            echo "@neatsuite:registry=https://npm.pkg.github.com" >> .npmrc
            npm install ${packages.join(' ')}
            \`\`\`
            
            [View Packages](https://github.com/${owner}/${repo}/packages)`;
            
            core.info(message); 